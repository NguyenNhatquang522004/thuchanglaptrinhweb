@model nguyennhatquang_2280618967.Models.Product
@using Microsoft.AspNetCore.Mvc.Rendering
@{
    ViewData["Title"] = "Add Product";
}

<h2>Add Product</h2>

<form asp-action="Add" method="post" enctype="multipart/form-data" id="productForm">
    <div class="row">
        <div class="col-md-6">
            <!-- Product Information -->
            <div class="card">
                <div class="card-header">
                    <h5>Product Information</h5>
                </div>
                <div class="card-body">
                    <div class="form-group mb-3">
                        <label asp-for="Name"></label>
                        <input asp-for="Name" class="form-control" />
                        <span asp-validation-for="Name" class="text-danger"></span>
                    </div>

                    <div class="form-group mb-3">
                        <label asp-for="Price"></label>
                        <input asp-for="Price" class="form-control" />
                        <span asp-validation-for="Price" class="text-danger"></span>
                    </div>

                    <div class="form-group mb-3">
                        <label asp-for="Description"></label>
                        <textarea asp-for="Description" class="form-control" rows="4"></textarea>
                        <span asp-validation-for="Description" class="text-danger"></span>
                    </div>

                    <div class="form-group mb-3">
                        <label asp-for="CategoryId">Category</label>
                        <select asp-for="CategoryId" asp-items="ViewBag.Categories"
                                class="form-control">
                            <option value="">-- Select Category --</option>
                        </select>
                        <span asp-validation-for="CategoryId" class="text-danger"></span>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-md-6">
            <!-- Media Upload Section -->
            <div class="card">
                <div class="card-header">
                    <h5>Product Media</h5>
                </div>
                <div class="card-body">
                    <!-- Main Image Upload -->
                    <div class="form-group mb-4">
                        <label>Main Product Image</label>
                        <div class="upload-area" id="mainImageUpload">
                            <div class="upload-content">
                                <i class="fas fa-cloud-upload-alt fa-2x text-muted"></i>
                                <p class="mt-2 mb-1">Click to upload or drag and drop</p>
                                <small class="text-muted">Main display image for your product</small>
                            </div>
                            <input type="file" name="imageUrl" accept="image/*" style="display: none;" />
                        </div>
                        <div id="mainImagePreview" class="mt-2"></div>
                    </div>

                    <!-- Media Tabs -->
                    <ul class="nav nav-tabs" id="mediaTab" role="tablist">
                        <li class="nav-item" role="presentation">
                            <button class="nav-link active" id="images-tab" data-bs-toggle="tab" data-bs-target="#images" type="button" role="tab">
                                <i class="fas fa-images"></i> Additional Images
                            </button>
                        </li>
                        <li class="nav-item" role="presentation">
                            <button class="nav-link" id="videos-tab" data-bs-toggle="tab" data-bs-target="#videos" type="button" role="tab">
                                <i class="fas fa-video"></i> Product Videos
                            </button>
                        </li>
                    </ul>

                    <div class="tab-content" id="mediaTabContent">
                        <!-- Images Tab -->
                        <div class="tab-pane fade show active" id="images" role="tabpanel">
                            <div class="form-group mt-3">
                                <div class="upload-area" id="additionalImagesUpload">
                                    <div class="upload-content">
                                        <i class="fas fa-images fa-2x text-muted"></i>
                                        <p class="mt-2 mb-1">Click to upload or drag and drop</p>
                                        <small class="text-muted">Add multiple images (unlimited)</small>
                                    </div>
                                    <input type="file" multiple accept="image/*" style="display: none;" />
                                </div>

                                <div class="mt-2">
                                    <button type="button" class="btn btn-outline-secondary btn-sm" id="addMoreImagesBtn">
                                        <i class="fas fa-plus"></i> Add More Images
                                    </button>
                                    <button type="button" class="btn btn-outline-danger btn-sm" id="clearAllImagesBtn">
                                        <i class="fas fa-trash"></i> Clear All Images
                                    </button>
                                </div>

                                <div id="additionalImagesPreview" class="mt-3">
                                    <div id="imageCounter" class="text-muted mb-2" style="display: none;">
                                        <small>Selected images: <span id="imageCount">0</span></small>
                                    </div>
                                    <div id="imagesGrid" class="row"></div>
                                </div>
                            </div>
                        </div>

                        <!-- Videos Tab -->
                        <div class="tab-pane fade" id="videos" role="tabpanel">
                            <div class="form-group mt-3">
                                <div class="upload-area" id="productVideosUpload">
                                    <div class="upload-content">
                                        <i class="fas fa-video fa-2x text-muted"></i>
                                        <p class="mt-2 mb-1">Click to upload or drag and drop</p>
                                        <small class="text-muted">Supported formats: MP4, WebM, OGG, AVI, MOV</small>
                                    </div>
                                    <input type="file" multiple accept="video/*" style="display: none;" />
                                </div>

                                <div class="mt-2">
                                    <button type="button" class="btn btn-outline-secondary btn-sm" id="addMoreVideosBtn">
                                        <i class="fas fa-plus"></i> Add More Videos
                                    </button>
                                    <button type="button" class="btn btn-outline-danger btn-sm" id="clearAllVideosBtn">
                                        <i class="fas fa-trash"></i> Clear All Videos
                                    </button>
                                    <div class="mt-2">
                                        <small class="text-info">
                                            <i class="fas fa-info-circle"></i>
                                            Recommended: Use MP4 format for better compatibility. Max file size: 100MB per video.
                                        </small>
                                    </div>
                                </div>

                                <div id="productVideosPreview" class="mt-3">
                                    <div id="videoCounter" class="text-muted mb-2" style="display: none;">
                                        <small>Selected videos: <span id="videoCount">0</span></small>
                                    </div>
                                    <div id="videosGrid" class="row"></div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Form Actions -->
    <div class="row mt-4">
        <div class="col-12">
            <div class="card">
                <div class="card-body text-center">
                    <button type="submit" class="btn btn-primary btn-lg me-2">
                        <i class="fas fa-save"></i> Add Product
                    </button>
                    <a asp-action="Index" class="btn btn-secondary btn-lg">
                        <i class="fas fa-arrow-left"></i> Cancel
                    </a>
                </div>
            </div>
        </div>
    </div>

    <!-- Hidden inputs for additional images and videos -->
    <div id="hiddenFileInputs"></div>
</form>

@section Styles {
    <style>
        .upload-area {
            border: 2px dashed #ccc;
            border-radius: 8px;
            padding: 30px;
            text-align: center;
            cursor: pointer;
            transition: all 0.3s ease;
            min-height: 120px;
            display: flex;
            align-items: center;
            justify-content: center;
        }

            .upload-area:hover {
                border-color: #007bff;
                background-color: #f8f9fa;
            }

            .upload-area.dragover {
                border-color: #007bff;
                background-color: #e7f3ff;
            }

        .upload-content {
            pointer-events: none;
        }

        .media-preview-item {
            position: relative;
            margin-bottom: 15px;
        }

            .media-preview-item img,
            .media-preview-item video {
                width: 100%;
                height: 150px;
                object-fit: cover;
                border-radius: 8px;
                border: 2px solid #dee2e6;
            }

        .media-remove-btn {
            position: absolute;
            top: 5px;
            right: 5px;
            background: rgba(220, 53, 69, 0.9);
            color: white;
            border: none;
            border-radius: 50%;
            width: 25px;
            height: 25px;
            display: flex;
            align-items: center;
            justify-content: center;
            cursor: pointer;
            font-size: 12px;
        }

            .media-remove-btn:hover {
                background: rgba(220, 53, 69, 1);
            }

        .main-image-preview {
            max-width: 100%;
            max-height: 200px;
            border-radius: 8px;
            border: 2px solid #28a745;
        }

        .media-name {
            font-size: 11px;
            color: #6c757d;
            margin-top: 5px;
            word-break: break-word;
        }

        .video-duration {
            position: absolute;
            bottom: 5px;
            right: 5px;
            background: rgba(0, 0, 0, 0.7);
            color: white;
            padding: 2px 6px;
            border-radius: 4px;
            font-size: 10px;
        }
    </style>
}

@section Scripts {
    <script>
        let additionalImages = [];
        let productVideos = [];
        let imageCounter = 0;
        let videoCounter = 0;

        document.addEventListener('DOMContentLoaded', function() {
            initializeMediaUpload();
        });

        function initializeMediaUpload() {
            // Main image upload
            const mainUploadArea = document.getElementById('mainImageUpload');
            const mainFileInput = mainUploadArea.querySelector('input[type="file"]');

            // Additional images upload
            const additionalUploadArea = document.getElementById('additionalImagesUpload');
            const additionalFileInput = additionalUploadArea.querySelector('input[type="file"]');

            // Product videos upload
            const videosUploadArea = document.getElementById('productVideosUpload');
            const videosFileInput = videosUploadArea.querySelector('input[type="file"]');

            // Event listeners for main image
            mainUploadArea.addEventListener('click', () => mainFileInput.click());
            mainUploadArea.addEventListener('dragover', handleDragOver);
            mainUploadArea.addEventListener('drop', (e) => handleDrop(e, 'main'));
            mainUploadArea.addEventListener('dragleave', handleDragLeave);
            mainFileInput.addEventListener('change', (e) => handleMainImageSelect(e));

            // Event listeners for additional images
            additionalUploadArea.addEventListener('click', () => additionalFileInput.click());
            additionalUploadArea.addEventListener('dragover', handleDragOver);
            additionalUploadArea.addEventListener('drop', (e) => handleDrop(e, 'images'));
            additionalUploadArea.addEventListener('dragleave', handleDragLeave);
            additionalFileInput.addEventListener('change', (e) => handleAdditionalImagesSelect(e));

            // Event listeners for videos
            videosUploadArea.addEventListener('click', () => videosFileInput.click());
            videosUploadArea.addEventListener('dragover', handleDragOver);
            videosUploadArea.addEventListener('drop', (e) => handleDrop(e, 'videos'));
            videosUploadArea.addEventListener('dragleave', handleDragLeave);
            videosFileInput.addEventListener('change', (e) => handleProductVideosSelect(e));

            // Button event listeners
            document.getElementById('addMoreImagesBtn').addEventListener('click', () => additionalFileInput.click());
            document.getElementById('clearAllImagesBtn').addEventListener('click', clearAllImages);
            document.getElementById('addMoreVideosBtn').addEventListener('click', () => videosFileInput.click());
            document.getElementById('clearAllVideosBtn').addEventListener('click', clearAllVideos);
        }

        function handleDragOver(e) {
            e.preventDefault();
            e.stopPropagation();
            e.currentTarget.classList.add('dragover');
        }

        function handleDragLeave(e) {
            e.preventDefault();
            e.stopPropagation();
            e.currentTarget.classList.remove('dragover');
        }

        function handleDrop(e, type) {
            e.preventDefault();
            e.stopPropagation();
            e.currentTarget.classList.remove('dragover');

            const files = e.dataTransfer.files;
            if (files.length > 0) {
                if (type === 'main' && files.length === 1) {
                    handleMainImage(files[0]);
                } else if (type === 'images') {
                    handleAdditionalImages(Array.from(files).filter(f => f.type.startsWith('image/')));
                } else if (type === 'videos') {
                    handleProductVideos(Array.from(files).filter(f => f.type.startsWith('video/')));
                }
            }
        }

        function handleMainImageSelect(e) {
            const file = e.target.files[0];
            if (file) {
                handleMainImage(file);
            }
        }

        function handleMainImage(file) {
            const preview = document.getElementById('mainImagePreview');
            preview.innerHTML = '';

            if (file && file.type.startsWith('image/')) {
                const reader = new FileReader();
                reader.onload = function(e) {
                    preview.innerHTML = `
                        <div class="text-center">
                            <img src="${e.target.result}" class="main-image-preview img-thumbnail" alt="Main image preview" />
                            <div class="mt-2">
                                <small class="text-success"><i class="fas fa-check"></i> Main image selected: ${file.name}</small>
                            </div>
                        </div>
                    `;
                };
                reader.readAsDataURL(file);
            }
        }

        function handleAdditionalImagesSelect(e) {
            const files = Array.from(e.target.files);
            handleAdditionalImages(files);
            e.target.value = '';
        }

        function handleAdditionalImages(files) {
            files.forEach(file => {
                if (file && file.type.startsWith('image/')) {
                    const imageId = 'img_' + (++imageCounter);
                    additionalImages.push({
                        id: imageId,
                        file: file,
                        name: file.name,
                        type: 'image'
                    });

                    addImagePreview(file, imageId);
                    createHiddenFileInput(file, imageId, 'additionalImages');
                }
            });
            updateImageCounter();
        }

        function handleProductVideosSelect(e) {
            const files = Array.from(e.target.files);
            handleProductVideos(files);
            e.target.value = '';
        }

        function handleProductVideos(files) {
            files.forEach(file => {
                if (file && file.type.startsWith('video/')) {
                    // Check file size (100MB limit)
                    const maxSize = 100 * 1024 * 1024; // 100MB
                    if (file.size > maxSize) {
                        alert(`Video "${file.name}" is too large. Maximum size is 100MB.`);
                        return;
                    }

                    const videoId = 'vid_' + (++videoCounter);
                    productVideos.push({
                        id: videoId,
                        file: file,
                        name: file.name,
                        type: 'video',
                        size: file.size
                    });

                    addVideoPreview(file, videoId);
                    createHiddenFileInput(file, videoId, 'productVideos');
                }
            });
            updateVideoCounter();
        }

        function addImagePreview(file, imageId) {
            const reader = new FileReader();
            reader.onload = function(e) {
                const imagesGrid = document.getElementById('imagesGrid');
                const imageHtml = `
                    <div class="col-md-4 col-sm-6" id="preview_${imageId}">
                        <div class="media-preview-item">
                            <img src="${e.target.result}" alt="Preview" />
                            <button type="button" class="media-remove-btn" onclick="removeMedia('${imageId}', 'image')">
                                <i class="fas fa-times"></i>
                            </button>
                            <div class="media-name">${file.name}</div>
                        </div>
                    </div>
                `;
                imagesGrid.insertAdjacentHTML('beforeend', imageHtml);
            };
            reader.readAsDataURL(file);
        }

        function addVideoPreview(file, videoId) {
            const reader = new FileReader();
            reader.onload = function(e) {
                const videosGrid = document.getElementById('videosGrid');
                const videoHtml = `
                    <div class="col-md-4 col-sm-6" id="preview_${videoId}">
                        <div class="media-preview-item">
                            <video src="${e.target.result}" controls muted></video>
                            <button type="button" class="media-remove-btn" onclick="removeMedia('${videoId}', 'video')">
                                <i class="fas fa-times"></i>
                            </button>
                            <div class="media-name">${file.name}</div>
                            <div class="media-name text-info">${formatFileSize(file.size)}</div>
                        </div>
                    </div>
                `;
                videosGrid.insertAdjacentHTML('beforeend', videoHtml);
            };
            reader.readAsDataURL(file);
        }

        function createHiddenFileInput(file, mediaId, inputName) {
            const hiddenContainer = document.getElementById('hiddenFileInputs');
            const input = document.createElement('input');
            input.type = 'file';
            input.name = inputName;
            input.id = `hidden_${mediaId}`;
            input.style.display = 'none';

            const dt = new DataTransfer();
            dt.items.add(file);
            input.files = dt.files;

            hiddenContainer.appendChild(input);
        }

        function removeMedia(mediaId, mediaType) {
            // Remove from preview
            const previewElement = document.getElementById(`preview_${mediaId}`);
            if (previewElement) {
                previewElement.remove();
            }

            // Remove from hidden inputs
            const hiddenInput = document.getElementById(`hidden_${mediaId}`);
            if (hiddenInput) {
                hiddenInput.remove();
            }

            // Remove from respective array
            if (mediaType === 'image') {
                additionalImages = additionalImages.filter(img => img.id !== mediaId);
                updateImageCounter();
            } else if (mediaType === 'video') {
                productVideos = productVideos.filter(vid => vid.id !== mediaId);
                updateVideoCounter();
            }
        }

        function clearAllImages() {
            if (additionalImages.length === 0) return;

            if (confirm('Are you sure you want to remove all additional images?')) {
                document.getElementById('imagesGrid').innerHTML = '';

                // Remove hidden inputs for images
                additionalImages.forEach(img => {
                    const hiddenInput = document.getElementById(`hidden_${img.id}`);
                    if (hiddenInput) hiddenInput.remove();
                });

                additionalImages = [];
                updateImageCounter();
            }
        }

        function clearAllVideos() {
            if (productVideos.length === 0) return;

            if (confirm('Are you sure you want to remove all videos?')) {
                document.getElementById('videosGrid').innerHTML = '';

                // Remove hidden inputs for videos
                productVideos.forEach(vid => {
                    const hiddenInput = document.getElementById(`hidden_${vid.id}`);
                    if (hiddenInput) hiddenInput.remove();
                });

                productVideos = [];
                updateVideoCounter();
            }
        }

        function updateImageCounter() {
            const counter = document.getElementById('imageCounter');
            const count = document.getElementById('imageCount');

            if (additionalImages.length > 0) {
                counter.style.display = 'block';
                count.textContent = additionalImages.length;
            } else {
                counter.style.display = 'none';
            }
        }

        function updateVideoCounter() {
            const counter = document.getElementById('videoCounter');
            const count = document.getElementById('videoCount');

            if (productVideos.length > 0) {
                counter.style.display = 'block';
                count.textContent = productVideos.length;
            } else {
                counter.style.display = 'none';
            }
        }

        function formatFileSize(bytes) {
            if (bytes === 0) return '0 Bytes';
            const k = 1024;
            const sizes = ['Bytes', 'KB', 'MB', 'GB'];
            const i = Math.floor(Math.log(bytes) / Math.log(k));
            return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];
        }

        // Form submission validation
        document.getElementById('productForm').addEventListener('submit', function(e) {
            const mainImage = document.querySelector('input[name="imageUrl"]').files[0];
            const additionalImagesCount = additionalImages.length;
            const videosCount = productVideos.length;

            if (!mainImage && additionalImagesCount === 0 && videosCount === 0) {
                e.preventDefault();
                alert('Please select at least one image or video for your product.');
                return;
            }

            // Check total video size
            const totalVideoSize = productVideos.reduce((total, vid) => total + vid.size, 0);
            const maxTotalSize = 500 * 1024 * 1024; // 500MB total

            if (totalVideoSize > maxTotalSize) {
                e.preventDefault();
                alert('Total video size exceeds 500MB limit. Please reduce video files.');
                return;
            }

            // Show loading state
            const submitBtn = e.target.querySelector('button[type="submit"]');
            submitBtn.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Creating Product...';
            submitBtn.disabled = true;
        });
    </script>
}